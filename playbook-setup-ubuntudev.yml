---
# ansible playbook to setup a ubuntu development box
- hosts: 127.0.0.1
  connection: local

  vars:
    bat_version: '0.22.1'
    delta_version: '0.14.0'
    exa_version: '0.10.0'
    ms_mirror: 'https://packages.microsoft.com'
    jq_version: '1.6'
    yq_version: '4.23.1'
    tfdocs_version: '0.16.0'
    kubectl_version: '1.21.9'
    kubectx_version: '0.9.4'
    kustomize_version: '4.5.5'
    k9s_version: '0.26.3'
    helm_version: '3.9.0'
    starship_version: '1.11.0'
    restic_version: '0.13.1'
    username: "{{ ansible_user_id }}"
  
  tasks:

  - name: Install specific git ppa repository
    become: true
    ansible.builtin.apt_repository:
      repo: ppa:git-core/ppa
      state: present
      filename: git
    tags: 
    - base

  - name: Install base packages
    become: true
    ansible.builtin.apt:
      name: [git, curl, wget, python3-pip, python3-venv, apt-transport-https, ca-certificates, software-properties-common, bzip2, unzip, tree, stow]
      state: present
    tags: 
    - base 
 
  - name: Install zsh
    become: true
    ansible.builtin.apt:
      name: zsh
      state: present
    tags: 
    - base
    - zsh

  - name: Setup zsh as default shell for user {{ username }}
    become: true
    ansible.builtin.user:
      name: "{{ username }}"
      shell: /usr/bin/zsh
    tags: 
    - base
    - zsh

  - name: Install exa package
    become: true
    ansible.builtin.unarchive:
      src: https://github.com/ogham/exa/releases/download/v{{ exa_version }}/exa-linux-x86_64-v{{ exa_version }}.zip
      dest: /usr/local
      include: [bin/exa]
      mode: 0755
      remote_src: true
    tags: 
    - base
    - exa

  - name: Install bat package (next generation cat)
    become: true
    ansible.builtin.apt:
      deb: https://github.com/sharkdp/bat/releases/download/v{{ bat_version }}/bat_{{ bat_version  }}_amd64.deb
    tags:
    - base
    - bat

  - name: Install git-delta package (intuitive pager for git)
    become: true
    ansible.builtin.apt:
      deb: https://github.com/dandavison/delta/releases/download/{{ delta_version }}/git-delta_{{ delta_version }}_amd64.deb
    tags:
    - base
    - delta

  - name: Add Docker apt key
    become: true
    ansible.builtin.get_url:
      url: https://download.docker.com/linux/ubuntu/gpg
      dest: /etc/apt/keyrings/docker.asc
      mode: 0644
      force: true
    when: ansible_facts['distribution_major_version'] | int >= 22 # Should not run on Ubuntu < 22
    tags:
    - docker

  - name: Configure Docker apt repository
    become: true
    ansible.builtin.apt_repository:
      repo: deb [signed-by=/etc/apt/keyrings/docker.asc, arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
      state: present
      filename: docker
    when: ansible_facts['distribution_major_version'] | int >= 22 # Should not run on Ubuntu < 22
    tags: 
    - docker

  - name: Install Docker
    become: true
    ansible.builtin.apt:
      name: 
      - docker-ce
      - docker-ce-cli
      - containerd.io
      state: present
    tags: 
    - docker

  - name: Add user {{ username }} to docker group
    become: true
    ansible.builtin.user:
      name: "{{ username }}"
      append: true
      groups: 
      - docker
    tags: 
    - docker

  - name: Install https://packages.microsoft.com key
    become: true
    ansible.builtin.get_url:
      url: '{{ ms_mirror }}/keys/microsoft.asc'
      dest: /etc/apt/keyrings/microsoft.asc
      mode: 0644
      force: true
    when: ansible_facts['distribution_major_version'] | int >= 22
    tags:
    - vscode

  - name: Install https://packages.microsoft.com repo
    become: true
    ansible.builtin.apt_repository:
      repo: 'deb [signed-by=/etc/apt/keyrings/microsoft.asc, arch=amd64] https://packages.microsoft.com/repos/azure-cli {{ ansible_distribution_release }} main'
      filename: azure-cli
      state: present
    when: ansible_facts['distribution_major_version'] | int >= 22
    tags:
    - vscode

  - name: Install vscode
    become: true
    ansible.builtin.apt:
      deb: https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64

  - name: Download restic
    ansible.builtin.get_url:
      url: https://github.com/restic/restic/releases/download/v{{ restic_version }}/restic_{{ restic_version }}_linux_amd64.bz2
      dest: /tmp/restic.bz2
      mode: 0755
      force: true
    tags: 
    - restic
  
  - name: Decompress and copy the binary to /usr/local/bin
    become: true
    ansible.builtin.shell: bunzip2 -c /tmp/restic.bz2 > /usr/local/bin/restic
    args:
      creates: "/usr/local/bin/restic"
    tags: 
    - restic

  - name: Set permissions on /usr/local/bin/restic
    become: true
    ansible.builtin.file:
      path: /usr/local/bin/restic
      mode: 0755
      owner: root
    tags: 
    - restic

  - name: Create user directory for nerd fonts
    ansible.builtin.file:
      path: /home/{{ username }}/.local/share/fonts/JetBrainsMono
      state: directory
    tags:
    - base
    - fonts

  - name: Install jetbrains mono nerd font
    ansible.builtin.unarchive:
      src: https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/JetBrainsMono.zip
      dest: /home/{{ username }}/.local/share/fonts/JetBrainsMono
      remote_src: true
      mode: 0755
    tags:
    - base
    - fonts

  - name: Download and install starship.rs
    become: true
    ansible.builtin.unarchive:
      src: https://github.com/starship/starship/releases/download/v{{ starship_version }}/starship-x86_64-unknown-linux-gnu.tar.gz
      dest: /usr/local/bin
      remote_src: true
      mode: 0755
    tags:
    - base
    - starship
    - zsh

  - name: Git checkout dotfiles
    ansible.builtin.git:
      repo: 'https://github.com/pondichys/.dotfiles.git'
      dest: "/home/{{ username }}/.dotfiles"
    tags:
    - dotfiles
    
  - name: Set dotfiles
    ansible.builtin.shell:
      chdir: "/home/{{ username }}/.dotfiles"
      cmd: "for DOT in zsh starship;do stow $DOT; done"
    tags:
    - dotfiles

  - name: Install latest distrobox
    become: true
    ansible.builtin.shell:
      cmd: "curl -s https://raw.githubusercontent.com/89luca89/distrobox/main/install | sh"
    tags:
    - distrobox

  # This task only install the keybase repo and package. You need to run run_keybase to set it up.
  - name: Install keybase
    become: true
    ansible.builtin.apt:
      deb: https://prerelease.keybase.io/keybase_amd64.deb
    tags:
    - keybase
...
